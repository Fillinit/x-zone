import telebot
from .models import *
from django.http import HttpResponse
from django.shortcuts import render, redirect
from django.core.mail import send_mail
from django.views.decorators.csrf import csrf_exempt
from django.contrib import messages


TELEGRAM_BOT_TOKEN = '7445289117:AAEda8GqhWqa8enFFPBgal9dl8wdYvcnms8'
TELEGRAM_CHAT_ID = '-1002550303976'

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

def index(request):
    template = "mainapp/index.html"
    return render(request, template)

def application(request):
    template = "mainapp/application.html"
    return render(request, template)

def feedback_footer(request):
    if request.method == 'POST':
        name = request.POST.get('name')
        email = request.POST.get('email')
        comment = request.POST.get('message')
        
        try:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"""üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–∑—É –≤ –°–®–ê</b>
            
üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
üÜî –ò–º—è: {name}
üì© Email: {email}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"""
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π
            bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=message,
                parse_mode='HTML'
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
            return False
     
        messages.success(request, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return redirect(request.META.get('HTTP_REFERER', '/'))
    else:
        return render(request, 'mainapp/application.html')


def feedback_application(request):
    if request.method == 'POST':
        name = request.POST.get('name')
        email = request.POST.get('email')
        phone = request.POST.get('phone')
        telegram = request.POST.get('telegram')
        age = request.POST.get('age')
        nation = request.POST.get('nation')
        inst = request.POST.get('inst')
        work = request.POST.get('work')
        money = request.POST.get('money')
        countries = request.POST.get('countries')
        trip_purpose = request.POST.get('trip_purpose') 
        visa_history = request.POST.get('visa')
        travel_companions = request.POST.get('count_people')
        relatives_in_usa = request.POST.get('relatives')
        visa_refusals = request.POST.get('refusals')
        city = request.POST.get('my_city')
        try:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"""
            üìù <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–∑—É –≤ –°–®–ê</b>

üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚úÖ –ò–º—è: {name}
‚úÖ Email: {email}
‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω: {phone}
‚úÖ Telegram: @{telegram}

üè† <b>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>
‚úÖ –í–æ–∑—Ä–∞—Å—Ç: {age}
‚úÖ –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: {nation}
‚úÖ –ì–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: {city}

üíº <b>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚úÖ –°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {work}
‚úÖ –ü—Ä–∏–º–µ—Ä–Ω—ã–π –¥–æ—Ö–æ–¥: {money}

üåé <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–µ–∑–¥–∫–µ:</b>
‚úÖ –¶–µ–ª—å –ø–æ–µ–∑–¥–∫–∏: {trip_purpose}
‚úÖ –ü–æ—Å–µ—â–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã: {countries}
‚úÖ –ò—Å—Ç–æ—Ä–∏—è –≤–∏–∑ –°–®–ê: {visa_history}

üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚úÖ –°–ø—É—Ç–Ω–∏–∫–∏: {travel_companions}
‚úÖ –†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –≤ –°–®–ê: {relatives_in_usa}
‚úÖ –û—Ç–∫–∞–∑—ã –≤ –≤–∏–∑–∞—Ö: {visa_refusals}

üì± <b>–°–æ—Ü—Å–µ—Ç–∏:</b>
‚úÖ Instagram: {inst}
            """
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π
            bot.send_message(
                chat_id=TELEGRAM_CHAT_ID,
                text=message,
                parse_mode='HTML'
            )
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
            return False
        
        
        
        return redirect('mainapp:index') 
    else:
        return render(request, 'mainapp/application.html')